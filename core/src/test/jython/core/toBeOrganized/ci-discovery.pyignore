from time import sleep
from com.xebialabs.deployit.core.api.dto import ConfigurationItem

# create ci with required discover parameters filled in
host = ConfigurationItem("com.xebialabs.deployit.ci.Host")
host.id="Infrastructure/host at localhost"
host.values = {"address":"localhost","username":"deployit","password":"admin","operatingSystemFamily":"UNIX","accessMethod":"SSH_SUDO"}
proxies.repository.create(host.id, host)

dmEntity = ConfigurationItem("com.xebialabs.deployit.plugin.test.DummyWasDeploymentManager")
dmEntity.id = "dmngr1";
dmEntity.values = {"host":host.id}

# discovery DummyDeploymentManager
discoveredRepositoryObjectsContainer = proxies.discovery.discover(dmEntity).entity
assertNotNone(discoveredRepositoryObjectsContainer)
discoveredCIs = discoveredRepositoryObjectsContainer.objects;
assertEquals(4,discoveredCIs.size());
assertEquals("com.xebialabs.deployit.plugin.test.DummyWasDeploymentManager", discoveredCIs.get(0).configurationItemTypeName);
assertEquals("com.xebialabs.deployit.plugin.test.DummyWasNodeAgent", discoveredCIs.get(1).configurationItemTypeName);
assertEquals("com.xebialabs.deployit.plugin.test.DummyWasManagedServer", discoveredCIs.get(2).configurationItemTypeName);
assertEquals("com.xebialabs.deployit.plugin.test.DummyWasCluster", discoveredCIs.get(3).configurationItemTypeName);

#save discovered cis
savedRepositoryObjects = proxies.repository.createMultiple(discoveredRepositoryObjectsContainer).entity;
assertNotNone(savedRepositoryObjects)
#check no validaton errors occured.
for repoObject in savedRepositoryObjects.objects :
    if repoObject.validations is None or len(repoObject.validations) == 0:
        print "ok"
    else:
        raise Exception("Validations are present! " + repoObject.validations.toString())

proxies.repository.delete(discoveredCIs.get(0).id)
proxies.repository.delete(host.id)
